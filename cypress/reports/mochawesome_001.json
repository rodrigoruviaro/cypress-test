{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-01T01:53:22.135Z",
    "end": "2025-08-01T01:53:35.979Z",
    "duration": 13844,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "755a870a-8580-4bd0-b272-421d531cfb80",
      "title": "",
      "fullFile": "cypress/e2e/3-End_to_End/Tarefa_1_e_2.cy.js",
      "file": "cypress/e2e/3-End_to_End/Tarefa_1_e_2.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eaaee301-22a7-4285-88f1-0b6b732dd40a",
          "title": "Validar Acesso a URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Acessar a página de login, validar se acessou a URL correta, digitar login correto e senha incorreta, clicar em Login, deve validar o status code como 503 e apresentar mensagem na tela de falha no login",
              "fullTitle": "Validar Acesso a URL Acessar a página de login, validar se acessou a URL correta, digitar login correto e senha incorreta, clicar em Login, deve validar o status code como 503 e apresentar mensagem na tela de falha no login",
              "timedOut": null,
              "duration": 5428,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Preencher Senha inválida\ncy.Login('standard_user', 'senha@123');\n// Clicar no botão Login\ncy.intercept('POST', 'json').as('InterceptLogin');\ncy.ButtonSubmit('Login');\ncy.wait('@InterceptLogin', {\n  timeout: 30000\n}).its('response.statusCode').should('eq', 503);\n// Validar Retorno de Username ou Senha incorreto\ncy.get('[data-test=\"error\"]').should('be.visible').should('contain', 'Epic sadface: Username and password do not match any user in this service');\n// Validar se não teve alteração de URL\ncy.url().should('eq', Url);",
              "err": {},
              "uuid": "2443b7df-cf75-4d13-9b4a-898e25126d63",
              "parentUUID": "eaaee301-22a7-4285-88f1-0b6b732dd40a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acessar a página  e efetuar um login válido, validar se os elementos de menu e lista de produtos estão visiveis",
              "fullTitle": "Validar Acesso a URL Acessar a página  e efetuar um login válido, validar se os elementos de menu e lista de produtos estão visiveis",
              "timedOut": null,
              "duration": 1090,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Preehcer login e senha correto e logar no sistema\ncy.Login('standard_user', 'secret_sauce');\ncy.ButtonSubmit('Login');\n// Validar se acessou a URL correta após logar no sistema\ncy.url().should('eq', `${Url}inventory.html`);\n// Validar se apresenta elementos na tela após o login com sucesso\ncy.get('.header_label').should('be.visible');\ncy.get('#react-burger-menu-btn').should('be.visible');\ncy.get('[data-test=\"inventory-container\"]').should('be.visible');",
              "err": {},
              "uuid": "35a0f0fa-6c0a-4e11-9334-a5d70cb77ce8",
              "parentUUID": "eaaee301-22a7-4285-88f1-0b6b732dd40a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acessar a página, efetuar login, inserir 1 produto no carrinho, tentar finalizar a venda sem preencher os dados, irá retornar falha, preencher os dados obrigatórios até permitir avançar para a proxima tela",
              "fullTitle": "Validar Acesso a URL Acessar a página, efetuar login, inserir 1 produto no carrinho, tentar finalizar a venda sem preencher os dados, irá retornar falha, preencher os dados obrigatórios até permitir avançar para a proxima tela",
              "timedOut": null,
              "duration": 2226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Preehcer login e senha correto e logar no sistema\ncy.Login('standard_user', 'secret_sauce');\ncy.ButtonSubmit('Login');\n// Validar se acessou a URL correta após logar no sistema\ncy.url().should('eq', `${Url}inventory.html`);\n// Validar que não existem produtos no carrinho\ncy.get('[data-test=\"shopping-cart-badge\"]').should('not.exist');\n// Adicionar um item ao carrinho e verificar se o botão foi alterado para remover o item do carrinho\ncy.get('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\ncy.get('[data-test=\"remove-sauce-labs-backpack\"]').should('be.visible');\n// Verificar se está apresentando que há 1 item no carrinho\ncy.get('[data-test=\"shopping-cart-badge\"]').should('be.visible').should('contain', '1');\n// Clicar sobre o item do carrinho, conferir se a URL foi redirecionada para a URL correta \ncy.get('[data-test=\"shopping-cart-link\"]').click();\ncy.url().should('eq', `${Url}cart.html`);\ncy.get('[data-test=\"secondary-header\"]').should('contain', 'Your Cart');\n// Clicar no botão Checkout, verificar se foi redirecionado e conferir o texto na tela\ncy.Button('Checkout');\ncy.url().should('eq', `${Url}checkout-step-one.html`);\ncy.get('[data-test=\"secondary-header\"]').should('contain', 'Checkout: Your Information');\n// Clicar em Continue sem preencher nenhum dado, deve retornar falha\ncy.ButtonSubmit('Continue');\ncy.get('.error-message-container').should('contain', 'Error: First Name is required');\n// Preencher o primeiro nome\ncy.CheckouInformation({\n  firstName: _faker.faker.person.firstName()\n});\n// Clicar em Continue e verificar que é necessário preencher o último nome\ncy.ButtonSubmit('Continue');\ncy.get('.error-message-container').should('contain', 'Error: Last Name is required');\n// Preencher o último nome\ncy.CheckouInformation({\n  lastName: _faker.faker.person.lastName()\n});\n// Conferir que é necessário preencher o código postal\ncy.ButtonSubmit('Continue');\ncy.get('.error-message-container').should('contain', 'Error: Postal Code is required');\n// Preencher o código postal \ncy.CheckouInformation({\n  postalCode: _faker.faker.location.zipCode()\n});\n// Clicar em Continue verificar se foi redicionado para a página correta e se o texto da página está correto\ncy.ButtonSubmit('Continue');\ncy.url().should('eq', `${Url}checkout-step-two.html`);\ncy.get('[data-test=\"secondary-header\"]').should('contain', 'Checkout: Overview');",
              "err": {},
              "uuid": "9e00553d-0e48-4e3c-aee0-6f4cdaa0ab3d",
              "parentUUID": "eaaee301-22a7-4285-88f1-0b6b732dd40a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Acessar a página, efetuar login, inserir 1 produto no carrinho, preencher os dados da compra e finalizar a mesma",
              "fullTitle": "Validar Acesso a URL Acessar a página, efetuar login, inserir 1 produto no carrinho, preencher os dados da compra e finalizar a mesma",
              "timedOut": null,
              "duration": 2223,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Preehcer login e senha correto e logar no sistema\ncy.Login('standard_user', 'secret_sauce');\ncy.ButtonSubmit('Login');\n// Validar se acessou a URL correta após logar no sistema\ncy.url().should('eq', `${Url}inventory.html`);\n// Validar que não existem produtos no carrinho\ncy.get('[data-test=\"shopping-cart-badge\"]').should('not.exist');\n// Encontrar e Armazenar a descrição e o preço do produto\ncy.get('[data-test=\"item-4-title-link\"] > [data-test=\"inventory-item-name\"]').invoke('text').then(descricao => {\n  cy.get(':nth-child(1) > [data-test=\"inventory-item-description\"] > .pricebar > [data-test=\"inventory-item-price\"]').invoke('text').then(preco => {\n    const descricaoProduto = descricao;\n    const precoProduto = preco;\n    // Adicionar um item ao carrinho e verificar se o botão foi alterado para remover o item do carrinho\n    cy.get('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    cy.get('[data-test=\"remove-sauce-labs-backpack\"]').should('be.visible');\n    // Verificar se está apresentando que há 1 item no carrinho\n    cy.get('[data-test=\"shopping-cart-badge\"]').should('be.visible').should('contain', '1');\n    // Clicar sobre o item do carrinho, conferir se a URL foi redirecionada para a URL correta \n    cy.get('[data-test=\"shopping-cart-link\"]').click();\n    cy.url().should('eq', `${Url}cart.html`);\n    cy.get('[data-test=\"secondary-header\"]').should('contain', 'Your Cart');\n    // Validar Se existe uma quantidade no carrinho e a desgrição e o preço do produto estão corretos\n    cy.get('[data-test=\"item-quantity\"]').should('have.text', '1');\n    cy.get('[data-test=\"inventory-item-name\"]').should('have.text', descricaoProduto);\n    cy.get('[data-test=\"inventory-item-price\"]').should('have.text', precoProduto);\n    // Clicar no botão Checkout verificar se foi redirecionado para a página correta\n    cy.Button('Checkout');\n    cy.url().should('eq', `${Url}checkout-step-one.html`);\n    cy.get('[data-test=\"secondary-header\"]').should('contain', 'Checkout: Your Information');\n    // Preencher os dados do comprador\n    cy.CheckouInformation({\n      firstName: _faker.faker.person.firstName(),\n      lastName: _faker.faker.person.lastName(),\n      postalCode: _faker.faker.location.zipCode()\n    });\n    // Clicar em Continue, validar se foi direcionado para a pagína correta \n    cy.ButtonSubmit('Continue');\n    cy.url().should('eq', `${Url}checkout-step-two.html`);\n    cy.get('[data-test=\"secondary-header\"]').should('contain', 'Checkout: Overview');\n    // Conferir se os dados do produto estão corretos na tela de finalização\n    cy.get('[data-test=\"item-quantity\"]').should('have.text', '1');\n    cy.get('[data-test=\"inventory-item-name\"]').should('have.text', descricaoProduto);\n    cy.get('[data-test=\"inventory-item-price\"]').should('have.text', precoProduto);\n    cy.get('[data-test=\"subtotal-label\"]').should('contain', `Item total: ${precoProduto}`);\n    cy.get('[data-test=\"tax-label\"]').should('contain', 'Tax: $2.40');\n    cy.get('[data-test=\"total-label\"]').should('contain', 'Total: $32.39');\n  });\n});\n// Clicar em Finish e validar se foi direcionado para a tela correta\ncy.Button('Finish');\ncy.url().should('eq', `${Url}checkout-complete.html`);\ncy.get('[data-test=\"secondary-header\"]').should('contain', 'Checkout: Complete!');\ncy.get('[data-test=\"complete-header\"]').should('contain', 'Thank you for your order!');\n// Clicar em Back Home e validar se retornou para a página inicial\ncy.Button('Back Home');\ncy.url().should('eq', `${Url}inventory.html`);\n// Validar se apresenta elementos na tela após retornar para a página incial\ncy.get('.header_label').should('be.visible');\ncy.get('#react-burger-menu-btn').should('be.visible');\ncy.get('[data-test=\"inventory-container\"]').should('be.visible');",
              "err": {},
              "uuid": "0ad49232-75d2-4be5-b330-b85213cd7fa1",
              "parentUUID": "eaaee301-22a7-4285-88f1-0b6b732dd40a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2443b7df-cf75-4d13-9b4a-898e25126d63",
            "35a0f0fa-6c0a-4e11-9334-a5d70cb77ce8",
            "9e00553d-0e48-4e3c-aee0-6f4cdaa0ab3d",
            "0ad49232-75d2-4be5-b330-b85213cd7fa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10967,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}